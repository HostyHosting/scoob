name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: Wait for new Sodiumoxide release https://github.com/sodiumoxide/sodiumoxide/issues/457.
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --locked --release --target=${{ matrix.target }}

      - name: Create Zip (mac / linux)
        if: |
          startsWith(matrix.os, 'ubuntu') ||
          startsWith(matrix.os, 'macOS')
        run: |
          cd target/${{ matrix.target }}/release
          zip -r scoob-${{ matrix.target }}.zip scoob

      - name: Create Zip (windows)
        if: |
          startsWith(matrix.os, 'windows')
        run: |
          Compress-Archive -CompressionLevel Optimal -Force -Path target/${{ matrix.target }}/release/scoob.exe -DestinationPath target/${{ matrix.target }}/release/scoob-${{ matrix.target }}.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.target }}/release/scoob-${{ matrix.target }}.zip

  homebrew:
    needs: release
    name: Create Homebrew Release
    runs-on: ubuntu-latest
    steps:
      - name: Get release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Dispatch to repository
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: release
          client-payload: '{"version": "${{ steps.get_version.outputs.VERSION }}"}'
